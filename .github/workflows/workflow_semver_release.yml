name: Test semver and release

on:
  push:
    branches:
      - 'main'
      
jobs:
  upload1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arch1,arch2]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: echo upload1-${{ matrix.arch }} >> upload1-${{ matrix.arch }}.txt
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: upload1-${{ matrix.arch }}
          path: upload1-${{ matrix.arch }}.txt
      
  upload2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arch1,arch2]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: echo upload2-${{ matrix.arch }} >> upload2-${{ matrix.arch }}.txt
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: upload2-${{ matrix.arch }}
          path: upload2-${{ matrix.arch }}.txt
   
  release:
    needs:
      - upload1
      - upload2
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Semver
        uses: paulhatch/semantic-version@v3.3
        id: version
        with:
          # The prefix to use to identify tags
          branch: "main"
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version_tag }}
          release_name: Release ${{ steps.version.outputs.version_tag }}
          draft: false
      
      - name: Tag latest
        uses: EndBug/latest-tag@latest
          
  release-artifacts:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        run: [upload1,upload2]
        arch: [arch1,arch2]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Download built artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.run }}-${{ matrix.arch }}
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R
          
      - name: Upload Release Asset1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ needs.release.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: artifacts/${{ matrix.run }}-${{ matrix.arch }}.txt
          asset_name: ${{ matrix.run }}-${{ matrix.arch }}
          asset_content_type: application/zip
